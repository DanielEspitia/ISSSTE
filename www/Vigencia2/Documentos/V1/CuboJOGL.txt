/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package org.yourorghere;
import com.sun.opengl.util.Animator;
import com.sun.opengl.util.texture.Texture;
import com.sun.opengl.util.texture.TextureIO;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.IOException;
import javax.media.opengl.GL;
import javax.media.opengl.GLAutoDrawable;
import javax.media.opengl.GLCanvas;
import javax.media.opengl.GLEventListener;
import javax.media.opengl.glu.GLU;
import javax.swing.JFrame;
/**
 *
 * @author MaGGiie
 */
public class CuboJOGL extends JFrame {

   public CuboJOGL(){
   super ("Cubo JOGL");
        GLCanvas canvas = new GLCanvas();
        canvas.addGLEventListener(new EventoJOGL());
        canvas.addKeyListener(new EventoTeclado(canvas));
        add(canvas);
        setSize(700,500);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setVisible(true);
        canvas.requestFocus();
        Animator animar3D=new Animator(canvas);
        animar3D.start();

   }
    public static void main(String[] args) {
        new CuboJOGL();
    }

}
class EventoJOGL implements GLEventListener{

    public Texture cara1,cara2,cara3,cara4,cara5,cara6;//se agrego  textura para la textura
     public static float rotateX=0.0f;
     public static float rotateY=0.0f;
     public static float rotateZ=0.0f;
     public static final GLU glu= new GLU();

    public void init (GLAutoDrawable drawable){ // nos dice las caracteriscias que va tener le gráfico
        GL gl = drawable.getGL();
        gl.glShadeModel(GL.GL_FLAT); //Para el degradado de los vertices
       // final GL.GL=drawable-getGLU();
        gl.glEnable(GL.GL_DEPTH_TEST);
        gl.glDepthFunc(GL.GL_LEQUAL);

        try
        {
            cara1=TextureIO.newTexture(new File("muse.jpg"),true);
            cara2=TextureIO.newTexture(new File("cereza.jpg"),true);
            cara3=TextureIO.newTexture(new File("medusa.jpg"),true);
            cara4=TextureIO.newTexture(new File("Tulipanes.jpg"),true);
              cara5=TextureIO.newTexture(new File("hoja.jpg"),true);
                cara6=TextureIO.newTexture(new File("lapiz.jpg"),true);

        }catch(IOException ex)
        {
            System.out.println("No se puede carga la textura");
        }
        }
    public void display(GLAutoDrawable drawable){


         final GL gl=drawable.getGL();
         //GL gl = drawable.getGL();
         GLU glu = new GLU();
         gl.glClear(GL.GL_COLOR_BUFFER_BIT);
         gl.glClear(GL.GL_DEPTH_BUFFER_BIT);
         gl.glTexEnvi(gl.GL_TEXTURE_ENV,gl.GL_TEXTURE_ENV_MODE,gl.GL_DECAL);//aplicar la textura, a las caras

         gl.glLoadIdentity();
         gl.glTranslatef(0.0f,0.0f,-1.0f);




         gl.glRotatef(rotateX, 1.0f, 0.0f, 0.0f);
         gl.glRotatef(rotateY, 0.0f, 1.0f, 0.0f);
         gl.glRotatef(rotateZ, 0.0f, 0.0f, 1.0f);


         gl.glPolygonMode(gl.GL_FRONT_AND_BACK,gl.GL_FILL);//se le quita el relleno de las caras//GL_LINE
         // gl.glPolygonMode(gl.GL_FRONT,gl.GL_LINE);
         //gl.glPolygonMode(gl.GL_BACK,gl.GL_LINE);
         //gl.glPolygonMode(gl.GL_POINT,gl.GL_LINE);
         //gl.glPolygonMode(gl.GL_FILL,gl.GL_LINE);

          cara1.enable();
          cara1.bind();
         gl.glBegin(GL.GL_QUADS);

         //Frente
         gl.glTexCoord2f(0,0);
         gl.glColor3f(0.0f, 1.0f, 1.0f);   gl.glVertex3f(0.0f, 0.0f, 0.0f);
         gl.glTexCoord2f(1,1);
         gl.glColor3f(0.0f, 0.0f, 1.0f);   gl.glVertex3f(0.0f, 0.2f, 0.0f);
         gl.glTexCoord2f(1,0);
         gl.glColor3f(0.0f, 0.0f, 0.0f);   gl.glVertex3f(0.2f, 0.0f, 0.0f);
         gl.glTexCoord2f(0,1);
         gl.glColor3f(0.0f, 0.0f, 0.0f);   gl.glVertex3f(0.2f,0.2f, 0.0f);

         gl.glEnd();

         //Derecha
         cara2.enable();
         cara2.bind();
         gl.glBegin(GL.GL_QUADS);

         gl.glTexCoord2f(0,0);
         gl.glColor3f(0.0f, 1.0f, 1.0f);   gl.glVertex3f(0.2f, 0.2f, 0.0f);
         gl.glTexCoord2f(1,1);
         gl.glColor3f(0.0f, 0.0f, 1.0f);   gl.glVertex3f(0.2f, 0.0f, 0.0f);
         gl.glTexCoord2f(1,0);
         gl.glColor3f(0.0f, 0.0f, 0.0f);   gl.glVertex3f(0.2f, 0.0f, -0.2f);
         gl.glTexCoord2f(0,1);
         gl.glColor3f(0.0f, 0.0f, 0.0f);   gl.glVertex3f(0.2f,0.2f, -0.2f);
         gl.glEnd();
         //Izquierda

         cara3.enable();
         cara3.bind();
         gl.glBegin(GL.GL_QUADS);

         gl.glTexCoord2f(0,0);
         gl.glColor3f(0.0f, 1.0f, 1.0f);   gl.glVertex3f(0.0f, 0.2f, 0.0f);
         gl.glTexCoord2f(1,1);
         gl.glColor3f(0.0f, 0.0f, 1.0f);   gl.glVertex3f(0.0f, 0.0f, 0.0f);
         gl.glTexCoord2f(1,0);
         gl.glColor3f(0.0f, 0.0f, 0.0f);   gl.glVertex3f(0.0f, 0.2f, -0.2f);
         gl.glTexCoord2f(0,1);
         gl.glColor3f(0.0f, 0.0f, 0.0f);   gl.glVertex3f(0.0f,0.0f, -0.2f);
         gl.glEnd();

         // BASE
         cara4.enable();
         cara4.bind();
         gl.glBegin(GL.GL_QUADS);
         gl.glTexCoord2f(0,0);
         gl.glColor3f(0.0f, 0.0f, 0.0f);   gl.glVertex3f(0.0f, 0.0f, 0.0f);
         gl.glTexCoord2f(1,1);
         gl.glColor3f(0.1f, 0.1f, 0.1f);   gl.glVertex3f(0.2f, 0.0f, 0.0f);
         gl.glTexCoord2f(1,0);
         gl.glColor3f(0.2f, 0.2f, 0.2f);   gl.glVertex3f(0.0f, 0.0f, -0.2f);
         gl.glTexCoord2f(0,1);
         gl.glColor3f(0.0f, 0.0f, 0.0f);   gl.glVertex3f(0.2f,0.0f, -0.2f);

         gl.glEnd();

         // ARRIBA
         cara5.enable();
         cara5.bind();
         gl.glBegin(GL.GL_QUADS);
         gl.glTexCoord2f(0,0);
         gl.glColor3f(0.0f, 0.0f, 0.0f);   gl.glVertex3f(0.0f, 0.2f, 0.0f);
         gl.glTexCoord2f(1,1);
         gl.glColor3f(0.1f, 0.1f, 0.1f);   gl.glVertex3f(0.2f, 0.2f, 0.0f);
         gl.glTexCoord2f(1,0);
         gl.glColor3f(0.2f, 0.2f, 0.2f);   gl.glVertex3f(0.0f, 0.2f, -0.2f);
         gl.glTexCoord2f(0,1);
         gl.glColor3f(0.0f, 0.0f, 0.0f);   gl.glVertex3f(0.2f,0.2f, -0.2f);

         gl.glEnd();

         // Atras
         cara6.enable();
         cara6.bind();
         gl.glBegin(GL.GL_QUADS);
         gl.glTexCoord2f(0,0);
         gl.glColor3f(0.0f, 0.0f, 0.0f);   gl.glVertex3f(0.0f, 0.0f, -0.2f);
         gl.glTexCoord2f(1,1);
         gl.glColor3f(0.1f, 0.1f, 0.1f);   gl.glVertex3f(0.0f, 0.2f, -0.2f);
         gl.glTexCoord2f(1,0);
         gl.glColor3f(0.2f, 0.2f, 0.2f);   gl.glVertex3f(0.2f, 0.0f, -0.2f);
         gl.glTexCoord2f(0,1);
         gl.glColor3f(0.0f, 0.0f, 0.0f);   gl.glVertex3f(0.2f,0.2f, -0.2f);

         gl.glEnd();

         rotateX +=0.1f;
         rotateY +=0.1f;
         rotateZ +=0.1f;
    }

    public void reshape(GLAutoDrawable drawable, int x, int y, int width, int height) {

        final GL gl=drawable.getGL();
        final float h =(float)width/(float)height;
        gl.glMatrixMode(GL.GL_PROJECTION);
        gl.glLoadIdentity();
        glu.gluPerspective(50.0f,h,1.0,1000.0);
        //gl.goFrustum(1,1,1,5,1,2);
        gl.glMatrixMode(GL.GL_MODELVIEW);
        gl.glLoadIdentity();
    }

    public void displayChanged(GLAutoDrawable drawable, boolean modeChanged, boolean deviceChanged) {

    }
}

class EventoTeclado implements KeyListener {
    GLCanvas glc;
    public EventoTeclado(GLCanvas glc){
        this.glc = glc;
    }

    public void keyTyped(KeyEvent e){
        switch(e.getKeyChar()){
            case 'x': EventoJOGL.rotateX  += 0.1f;    glc.repaint(); break;
            case 'y': EventoJOGL.rotateY  += 0.1f;   glc.repaint(); break;
            case 'z': EventoJOGL.rotateZ  += 0.1f;   glc.repaint(); break;
        }
    }

    public void keyPressed(KeyEvent e) {
    }

    public void keyReleased(KeyEvent e) {

    }
}
